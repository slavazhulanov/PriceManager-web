#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ API endpoints
"""

import requests
import json
import sys
import os
from urllib.parse import urlparse

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API
def test_api(base_url):
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø–æ –∞–¥—Ä–µ—Å—É: {base_url}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ API
    try:
        response = requests.get(f"{base_url}/api/v1/test")
        print(f"–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç API: {response.status_code}")
        if response.status_code == 200:
            print(f"–û—Ç–≤–µ—Ç: {json.dumps(response.json(), ensure_ascii=False, indent=2)}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑–æ–≤–æ–≥–æ API: {str(e)}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è —Ñ–∞–π–ª–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    try:
        response = requests.get(f"{base_url}/api/v1/files/columns/supplier_test.csv")
        print(f"\n–ö–æ–ª–æ–Ω–∫–∏ –¥–ª—è —Ñ–∞–π–ª–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: {response.status_code}")
        if response.status_code == 200:
            print(f"–û—Ç–≤–µ—Ç: {json.dumps(response.json(), ensure_ascii=False, indent=2)}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–æ–Ω–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: {str(e)}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è —Ñ–∞–π–ª–∞ –º–∞–≥–∞–∑–∏–Ω–∞
    try:
        response = requests.get(f"{base_url}/api/v1/files/columns/store_test.csv")
        print(f"\n–ö–æ–ª–æ–Ω–∫–∏ –¥–ª—è —Ñ–∞–π–ª–∞ –º–∞–≥–∞–∑–∏–Ω–∞: {response.status_code}")
        if response.status_code == 200:
            print(f"–û—Ç–≤–µ—Ç: {json.dumps(response.json(), ensure_ascii=False, indent=2)}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–æ–Ω–æ–∫ –º–∞–≥–∞–∑–∏–Ω–∞: {str(e)}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∑–∞–≥—Ä—É–∑–∫–∏ URL
    try:
        payload = {
            "fileName": "test.csv", 
            "fileType": "supplier"
        }
        response = requests.post(
            f"{base_url}/api/v1/files/upload_url",
            json=payload
        )
        print(f"\n–ó–∞–ø—Ä–æ—Å URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏: {response.status_code}")
        if response.status_code == 200:
            print(f"–û—Ç–≤–µ—Ç: {json.dumps(response.json(), ensure_ascii=False, indent=2)}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏: {str(e)}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1:
        base_url = sys.argv[1]
    else:
        print("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–π URL –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
        base_url = "http://localhost:3000"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ URL
    try:
        parsed = urlparse(base_url)
        if not parsed.scheme or not parsed.netloc:
            print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç URL: {base_url}")
            sys.exit(1)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ URL: {str(e)}")
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_api(base_url)

if __name__ == "__main__":
    main() 